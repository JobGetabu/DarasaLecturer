apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

ext.versionMajor = 2
ext.versionMinor = 5
ext.versionPatch = 1
ext.versionClassifier = null
ext.isSnapshot = false  //only true while in development
ext.minimumSdkVersion = 19

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.job.darasalecturer"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode generateVersionCode() // 190020501
        versionName generateVersionName() // 2.5.1
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Enabling multidex support.
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        buildTypes {
            debug {

            }
            release {
                signingConfig signingConfigs.release
                shrinkResources true
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    dexOptions {
        //may speed up incremental builds
        preDexLibraries true
    }

}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}

dependencies {
    def support_version = "28.0.0-alpha1"
    def lifecycle_version = "1.1.1"
    def room_version = "1.1.1"
    def work_version = "2.2.0"
    def firebase_common = "16.1.0"
    def butterknife_version = "10.0.0"
    def lottie_version = "2.7.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //If your minSdkVersion is lower than 21
    implementation 'androidx.multidex:multidex:2.0.1'

    //firebase
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation "com.google.firebase:firebase-auth:$firebase_common"
    implementation 'com.google.firebase:firebase-firestore:17.1.5'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'

    //nearby messages
    implementation 'com.google.android.gms:play-services-nearby:16.0.0'

    // ButterKnife (for code brevity)
    implementation "com.jakewharton:butterknife:$butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"

    // FirebaseUI for Cloud Firestore
    implementation 'com.firebaseui:firebase-ui-firestore:4.1.0'

    //rating bar
    implementation 'me.zhanghai.android.materialratingbar:library:1.3.2'

    //sweet alert dialogue
    implementation 'com.github.f0ris.sweetalert:library:1.5.1'

    //loading
    implementation 'com.victor:lib:1.0.4'

    //password
    //implementation 'com.hanks:passcodeview:0.1.2'
    implementation 'com.github.JobGetabu:PasscodeView:0.1.3'

    //QR gen
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0@aar'

    //gson
    implementation 'com.google.code.gson:gson:2.8.5'

    //gthumb
    implementation 'com.hbb20:gthumb:1.3'

    //smooth checkbox
    implementation 'com.github.elton2048:SmoothCheckBox:1.0.1'

    //steps view
    implementation 'com.shuhart.stepview:stepview:1.4.0'

    //multiselect dialogue
    implementation 'com.github.abumoallim:Android-Multi-Select-Dialog:v1.9'

    //lottie
    implementation "com.airbnb.android:lottie:$lottie_version"

    //generic adapter
    implementation "com.leodroidcoder:generic-adapter:1.0.1"

    //context menu
    implementation 'com.github.Yalantis:Context-Menu.Android:1.0.8'

    //bubble-picker
    implementation 'com.github.hantrungkien:Bubble-Picker:v1.0.5.2'

    //powermenu
    implementation "com.github.skydoves:powermenu:2.0.5"

    //work manager
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"

    /*implementation('androidx.work:work-runtime:2.0.1') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }*/

    //architecture components
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.1.0'
}

apply plugin: 'com.google.gms.google-services'
